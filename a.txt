Rectangle player_rec = {
            .x = player.x + player.width - (player.width * 0.5),
            .y = player.y,
            .width = player.width - 15,
            .height = player.height * 0.2 + 1,
        };

player 128x128

verificar aplica velocidade


// verifica se o player atingiu o chão
    float pe_player = player->y + player->height;
    if(pe_player >= groundLevel) {
        player->y = 190 - player->height;
        player->velocityY = 0; // para a velocidade quando o player chega no chão
        player->isJumping = false;
    }
    
    float groundLevel = 190 - player->height * 0.15;
    if (player->y > groundLevel) {
        player->y = groundLevel;
        player->velocityY = 0; // para a velocidade quando o player chega no chão
        player->isJumping = false; 
    }

    enemy->velocityY += gravidade;
    enemy->position.y += enemy->velocityY;

    if (enemy->position.y > groundLevel) {
        enemy->position.y = groundLevel;
        enemy->velocityY = 0;
    }


----------------


        if( player.walking ) {
            player.x += player.direction * 2 * deltaTime * SCALE_FACTOR; 
        }

        player.y += player.velocityY * deltaTime;
        player.velocityY += 0.05; // gravidade

        int current_platform = player_na_platforma(player, platforms, platform_count);

        if( current_platform != -1 ) {
            if( player.velocityY > 0 ) {
                player.y = platforms[current_platform].y - player.height;
                player.velocityY = 0;
                player.isJumping = false;
            }

            // if( player.jump_key && IsKeyPressed( player.jump_key ) ) {
            //     player.velocityY = -player.jump_strength * SCALE_FACTOR;
            //     player.isJumping = true;
            // }
        }
        

------------

float gravidade = 0.5f;
    player->velocityY += gravidade;

    int current_platform = player_na_platforma(*player, platforms, platform_count);

    if (current_platform != -1) {
        if (player->velocityY > 0) {
            // Ajuste a posição do jogador para ficar sobre a plataforma
            player->y = platforms[current_platform].y - player->height;
            player->velocityY = 0; // Interrompa a queda do jogador
            player->isJumping = false; // Confirme que o jogador não está mais pulando
            printf("to no chao\n");
        }
    } else {
        player->y += player->velocityY; // Atualize a posição se ele estiver no ar
    }
